@startuml diagrammeAll
skinparam classAttributeIconSize 0

!include diagrammeFlow.txt!0
 
package FastFlow {

  class Pipeline {
    run(): void
  }

  together {
    class Farm {
      nbWorkers(): int
    }

    class Worker {
    }

    class Node {
    }
  }

  together {
    class ff_node {
    }

    class ff_farm {
    }
  }

  enum NodeType {
    BASIC_NODE
    WORKER_NODE
    FARM_NODE
    PIPELINE_NODE
    UNDEFINED_NODE
  }
  
}  

Pipeline --|> Node
Farm --|> Node
Worker --|> Node

Farm -> "1..*" Worker
Farm --> ff_farm

Node --> "type" NodeType

Node --> ff_node


package Operators {

  abstract class BaseOperator {
    +=(): BaseOperator
  }

  class CountOperator {
  }

  class LimitOperator {
  }

  class MapOperator {
  }

  class LinesFromFileOperator {
  }

  note right of CountOperator :  Etc.
}

CountOperator --|> BaseOperator


LimitOperator --|> BaseOperator
LinesFromFileOperator --|> BaseOperator
MapOperator --|> BaseOperator

package Stages {

  class PipeManager {
    nbWorkers(): int
    setNbWorkers(): void
    isParallel(): bool
    ..
    run(): void
  } 

  interface Stage {
  }

  enum StageType {
    SOURCE_STAGE
    NON_SOURCE_STAGE
  }

 class BaseStage<TOperator, StageType> {
   isSource(): bool
 }

  class CollectorStage<TOperator> {
    value(): TOperator::Value
  }
}

BaseStage .|> Stage

BaseStage --> "operators\n1..*" BaseOperator 

CollectorStage --|> BaseStage

PipeManager *-- "stages\n0..*" Stage

Flow --> PipeManager : implemented by > 

PipeManager -> Pipeline

@enduml
