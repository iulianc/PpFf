@startuml diagrammeAll
skinparam classAttributeIconSize 0

!include diagrammeFlow.txt!0
 
class PipeManager {
  nbWorkers(): int
  setNbWorkers(): void
  isParallel(): bool
  run(): void
} 

Flow --> "1" PipeManager

PipeManager -> "1" Pipeline

class Pipeline {
  run(): void
}

Pipeline --|> Node
Farm --|> Node
Worker --|> Node

class Farm {
  nbWorkers(): int
}

Farm --> "1..*" Worker
Farm --> ff_farm

class Worker {
}

class Node {
}

enum NodeType {
  BASIC_NODE
  WORKER_NODE
  FARM_NODE
  PIPELINE_NODE
  UNDEFINED_NODE
}
  
Node --> "type" NodeType

Node --> ff_node

class ff_node {
}

class ff_farm {
}

package Operators {

  abstract class BaseOperator {
    +=(): BaseOperator
  }

  class CountOperator {
  }

  class LimitOperator {
  }

  class MapOperator {
  }

  class LinesFromFileOperator {
  }
}

CountOperator --|> BaseOperator
LimitOperator --|> BaseOperator
LinesFromFileOperator --|> BaseOperator
MapOperator --|> BaseOperator

package Stages {

  interface Stage {
  }

  class BaseStage<TOperator, bool> {
  }

  class CollectorStage<TOperator> {
    value(): Value
  }
}

BaseStage .|> Stage

BaseStage --> "operators\n1..*" BaseOperator 

CollectorStage --|> BaseStage

PipeManager *-- "stages\n0..*" Stage



@enduml
